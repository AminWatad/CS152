State 52 conflicts: 1 shift/reduce


Grammar

    0 $accept: prog_start $end

    1 prog_start: functions

    2 functions: function functions
    3          | epsilon

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    5 declarations: declaration SEMICOLON declarations
    6             | epsilon

    7 declaration: ident declaration1 COLON array INTEGER

    8 declaration1: COMMA ident declaration1
    9             | epsilon

   10 array: ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF
   11      | epsilon

   12 statements: statement SEMICOLON statements
   13           | epsilon

   14 statement: var ASSIGN expression
   15          | IF boolexpr THEN statement SEMICOLON statements else ENDIF
   16          | WHILE boolexpr BEGINLOOP statement SEMICOLON statements ENDLOOP
   17          | DO BEGINLOOP statement SEMICOLON statements ENDLOOP WHILE boolexpr
   18          | READ var vars
   19          | WRITE var vars
   20          | CONTINUE
   21          | RETURN expression

   22 vars: COMMA var vars
   23     | epsilon

   24 else: ELSE statement SEMICOLON statements
   25     | epsilon

   26 var: ident
   27    | ident L_SQUARE_BRACKET expression R_SQUARE_BRACKET

   28 boolexpr: relation_and_expr boolexpr1

   29 boolexpr1: OR boolexpr
   30          | epsilon

   31 relation_and_expr: relation_expr relation_and_expr1

   32 relation_and_expr1: AND relation_and_expr
   33                   | epsilon

   34 relation_expr: not relation_expr1

   35 relation_expr1: expression comp expression
   36               | TRUE
   37               | FALSE
   38               | L_PAREN boolexpr R_PAREN

   39 not: NOT
   40    | epsilon

   41 comp: EQ
   42     | NEQ
   43     | LT
   44     | GT
   45     | LTE
   46     | GTE

   47 expression: multiplicative_expr expression1

   48 expression1: ADD expression
   49            | SUB expression
   50            | epsilon

   51 multiplicative_expr: term multiplicative_expr1

   52 multiplicative_expr1: MULT multiplicative_expr
   53                     | DIV multiplicative_expr
   54                     | MOD multiplicative_expr
   55                     | epsilon

   56 term: negative1 term1
   57     | SUB var
   58     | ident term3

   59 term3: L_PAREN term2 R_PAREN
   60      | epsilon

   61 term1: NUMBER
   62      | L_PAREN expression R_PAREN

   63 term2: expression expressions
   64      | epsilon

   65 expressions: COMMA expression expressions
   66            | epsilon

   67 negative1: SUB
   68          | epsilon

   69 epsilon: /* empty */

   70 ident: IDENT


Terminals, with rules where they appear

$end (0) 0
error (256)
INTEGER (258) 7
FUNCTION (259) 4
BEGIN_PARAMS (260) 4
END_PARAMS (261) 4
BEGIN_LOCALS (262) 4
END_LOCALS (263) 4
BEGIN_BODY (264) 4
END_BODY (265) 4
ARRAY (266) 10
OF (267) 10
IF (268) 15
THEN (269) 15
ENDIF (270) 15
ELSE (271) 24
WHILE (272) 16 17
DO (273) 17
BEGINLOOP (274) 16 17
ENDLOOP (275) 16 17
CONTINUE (276) 20
READ (277) 18
WRITE (278) 19
AND (279) 32
OR (280) 29
NOT (281) 39
TRUE (282) 36
FALSE (283) 37
RETURN (284) 21
SUB (285) 49 57 67
ADD (286) 48
MULT (287) 52
DIV (288) 53
MOD (289) 54
EQ (290) 41
NEQ (291) 42
LT (292) 43
GT (293) 44
LTE (294) 45
GTE (295) 46
SEMICOLON (296) 4 5 12 15 16 17 24
COLON (297) 7
COMMA (298) 8 22 65
L_PAREN (299) 38 59 62
R_PAREN (300) 38 59 62
L_SQUARE_BRACKET (301) 10 27
R_SQUARE_BRACKET (302) 10 27
ASSIGN (303) 14
IDENT (304) 4 70
NUMBER (305) 10 61


Nonterminals, with rules where they appear

$accept (51)
    on left: 0
prog_start (52)
    on left: 1, on right: 0
functions (53)
    on left: 2 3, on right: 1 2
function (54)
    on left: 4, on right: 2
declarations (55)
    on left: 5 6, on right: 4 5
declaration (56)
    on left: 7, on right: 5
declaration1 (57)
    on left: 8 9, on right: 7 8
array (58)
    on left: 10 11, on right: 7
statements (59)
    on left: 12 13, on right: 4 12 15 16 17 24
statement (60)
    on left: 14 15 16 17 18 19 20 21, on right: 12 15 16 17 24
vars (61)
    on left: 22 23, on right: 18 19 22
else (62)
    on left: 24 25, on right: 15
var (63)
    on left: 26 27, on right: 14 18 19 22 57
boolexpr (64)
    on left: 28, on right: 15 16 17 29 38
boolexpr1 (65)
    on left: 29 30, on right: 28
relation_and_expr (66)
    on left: 31, on right: 28 32
relation_and_expr1 (67)
    on left: 32 33, on right: 31
relation_expr (68)
    on left: 34, on right: 31
relation_expr1 (69)
    on left: 35 36 37 38, on right: 34
not (70)
    on left: 39 40, on right: 34
comp (71)
    on left: 41 42 43 44 45 46, on right: 35
expression (72)
    on left: 47, on right: 14 21 27 35 48 49 62 63 65
expression1 (73)
    on left: 48 49 50, on right: 47
multiplicative_expr (74)
    on left: 51, on right: 47 52 53 54
multiplicative_expr1 (75)
    on left: 52 53 54 55, on right: 51
term (76)
    on left: 56 57 58, on right: 51
term3 (77)
    on left: 59 60, on right: 58
term1 (78)
    on left: 61 62, on right: 56
term2 (79)
    on left: 63 64, on right: 59
expressions (80)
    on left: 65 66, on right: 63 65
negative1 (81)
    on left: 67 68, on right: 56
epsilon (82)
    on left: 69, on right: 3 6 9 11 13 23 25 30 33 40 50 55 60 64 66
    68
ident (83)
    on left: 70, on right: 7 8 26 27 58


State 0

    0 $accept: . prog_start $end

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 69 (epsilon)

    prog_start  go to state 2
    functions   go to state 3
    function    go to state 4
    epsilon     go to state 5


State 1

    4 function: FUNCTION . IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    IDENT  shift, and go to state 6


State 2

    0 $accept: prog_start . $end

    $end  shift, and go to state 7


State 3

    1 prog_start: functions .

    $default  reduce using rule 1 (prog_start)


State 4

    2 functions: function . functions

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 69 (epsilon)

    functions  go to state 8
    function   go to state 4
    epsilon    go to state 5


State 5

    3 functions: epsilon .

    $default  reduce using rule 3 (functions)


State 6

    4 function: FUNCTION IDENT . SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    SEMICOLON  shift, and go to state 9


State 7

    0 $accept: prog_start $end .

    $default  accept


State 8

    2 functions: function functions .

    $default  reduce using rule 2 (functions)


State 9

    4 function: FUNCTION IDENT SEMICOLON . BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    BEGIN_PARAMS  shift, and go to state 10


State 10

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS . declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    IDENT  shift, and go to state 11

    $default  reduce using rule 69 (epsilon)

    declarations  go to state 12
    declaration   go to state 13
    epsilon       go to state 14
    ident         go to state 15


State 11

   70 ident: IDENT .

    $default  reduce using rule 70 (ident)


State 12

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations . END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    END_PARAMS  shift, and go to state 16


State 13

    5 declarations: declaration . SEMICOLON declarations

    SEMICOLON  shift, and go to state 17


State 14

    6 declarations: epsilon .

    $default  reduce using rule 6 (declarations)


State 15

    7 declaration: ident . declaration1 COLON array INTEGER

    COMMA  shift, and go to state 18

    $default  reduce using rule 69 (epsilon)

    declaration1  go to state 19
    epsilon       go to state 20


State 16

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS . BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    BEGIN_LOCALS  shift, and go to state 21


State 17

    5 declarations: declaration SEMICOLON . declarations

    IDENT  shift, and go to state 11

    $default  reduce using rule 69 (epsilon)

    declarations  go to state 22
    declaration   go to state 13
    epsilon       go to state 14
    ident         go to state 15


State 18

    8 declaration1: COMMA . ident declaration1

    IDENT  shift, and go to state 11

    ident  go to state 23


State 19

    7 declaration: ident declaration1 . COLON array INTEGER

    COLON  shift, and go to state 24


State 20

    9 declaration1: epsilon .

    $default  reduce using rule 9 (declaration1)


State 21

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS . declarations END_LOCALS BEGIN_BODY statements END_BODY

    IDENT  shift, and go to state 11

    $default  reduce using rule 69 (epsilon)

    declarations  go to state 25
    declaration   go to state 13
    epsilon       go to state 14
    ident         go to state 15


State 22

    5 declarations: declaration SEMICOLON declarations .

    $default  reduce using rule 5 (declarations)


State 23

    8 declaration1: COMMA ident . declaration1

    COMMA  shift, and go to state 18

    $default  reduce using rule 69 (epsilon)

    declaration1  go to state 26
    epsilon       go to state 20


State 24

    7 declaration: ident declaration1 COLON . array INTEGER

    ARRAY  shift, and go to state 27

    $default  reduce using rule 69 (epsilon)

    array    go to state 28
    epsilon  go to state 29


State 25

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations . END_LOCALS BEGIN_BODY statements END_BODY

    END_LOCALS  shift, and go to state 30


State 26

    8 declaration1: COMMA ident declaration1 .

    $default  reduce using rule 8 (declaration1)


State 27

   10 array: ARRAY . L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF

    L_SQUARE_BRACKET  shift, and go to state 31


State 28

    7 declaration: ident declaration1 COLON array . INTEGER

    INTEGER  shift, and go to state 32


State 29

   11 array: epsilon .

    $default  reduce using rule 11 (array)


State 30

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS . BEGIN_BODY statements END_BODY

    BEGIN_BODY  shift, and go to state 33


State 31

   10 array: ARRAY L_SQUARE_BRACKET . NUMBER R_SQUARE_BRACKET OF

    NUMBER  shift, and go to state 34


State 32

    7 declaration: ident declaration1 COLON array INTEGER .

    $default  reduce using rule 7 (declaration)


State 33

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY . statements END_BODY

    IF        shift, and go to state 35
    WHILE     shift, and go to state 36
    DO        shift, and go to state 37
    CONTINUE  shift, and go to state 38
    READ      shift, and go to state 39
    WRITE     shift, and go to state 40
    RETURN    shift, and go to state 41
    IDENT     shift, and go to state 11

    $default  reduce using rule 69 (epsilon)

    statements  go to state 42
    statement   go to state 43
    var         go to state 44
    epsilon     go to state 45
    ident       go to state 46


State 34

   10 array: ARRAY L_SQUARE_BRACKET NUMBER . R_SQUARE_BRACKET OF

    R_SQUARE_BRACKET  shift, and go to state 47


State 35

   15 statement: IF . boolexpr THEN statement SEMICOLON statements else ENDIF

    NOT  shift, and go to state 48

    $default  reduce using rule 69 (epsilon)

    boolexpr           go to state 49
    relation_and_expr  go to state 50
    relation_expr      go to state 51
    not                go to state 52
    epsilon            go to state 53


State 36

   16 statement: WHILE . boolexpr BEGINLOOP statement SEMICOLON statements ENDLOOP

    NOT  shift, and go to state 48

    $default  reduce using rule 69 (epsilon)

    boolexpr           go to state 54
    relation_and_expr  go to state 50
    relation_expr      go to state 51
    not                go to state 52
    epsilon            go to state 53


State 37

   17 statement: DO . BEGINLOOP statement SEMICOLON statements ENDLOOP WHILE boolexpr

    BEGINLOOP  shift, and go to state 55


State 38

   20 statement: CONTINUE .

    $default  reduce using rule 20 (statement)


State 39

   18 statement: READ . var vars

    IDENT  shift, and go to state 11

    var    go to state 56
    ident  go to state 46


State 40

   19 statement: WRITE . var vars

    IDENT  shift, and go to state 11

    var    go to state 57
    ident  go to state 46


State 41

   21 statement: RETURN . expression

    SUB    shift, and go to state 58
    IDENT  shift, and go to state 11

    $default  reduce using rule 69 (epsilon)

    expression           go to state 59
    multiplicative_expr  go to state 60
    term                 go to state 61
    negative1            go to state 62
    epsilon              go to state 63
    ident                go to state 64


State 42

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements . END_BODY

    END_BODY  shift, and go to state 65


State 43

   12 statements: statement . SEMICOLON statements

    SEMICOLON  shift, and go to state 66


State 44

   14 statement: var . ASSIGN expression

    ASSIGN  shift, and go to state 67


State 45

   13 statements: epsilon .

    $default  reduce using rule 13 (statements)


State 46

   26 var: ident .
   27    | ident . L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    L_SQUARE_BRACKET  shift, and go to state 68

    $default  reduce using rule 26 (var)


State 47

   10 array: ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET . OF

    OF  shift, and go to state 69


State 48

   39 not: NOT .

    $default  reduce using rule 39 (not)


State 49

   15 statement: IF boolexpr . THEN statement SEMICOLON statements else ENDIF

    THEN  shift, and go to state 70


State 50

   28 boolexpr: relation_and_expr . boolexpr1

    OR  shift, and go to state 71

    $default  reduce using rule 69 (epsilon)

    boolexpr1  go to state 72
    epsilon    go to state 73


State 51

   31 relation_and_expr: relation_expr . relation_and_expr1

    AND  shift, and go to state 74

    $default  reduce using rule 69 (epsilon)

    relation_and_expr1  go to state 75
    epsilon             go to state 76


State 52

   34 relation_expr: not . relation_expr1

    TRUE     shift, and go to state 77
    FALSE    shift, and go to state 78
    SUB      shift, and go to state 58
    L_PAREN  shift, and go to state 79
    IDENT    shift, and go to state 11

    L_PAREN   [reduce using rule 69 (epsilon)]
    $default  reduce using rule 69 (epsilon)

    relation_expr1       go to state 80
    expression           go to state 81
    multiplicative_expr  go to state 60
    term                 go to state 61
    negative1            go to state 62
    epsilon              go to state 63
    ident                go to state 64


State 53

   40 not: epsilon .

    $default  reduce using rule 40 (not)


State 54

   16 statement: WHILE boolexpr . BEGINLOOP statement SEMICOLON statements ENDLOOP

    BEGINLOOP  shift, and go to state 82


State 55

   17 statement: DO BEGINLOOP . statement SEMICOLON statements ENDLOOP WHILE boolexpr

    IF        shift, and go to state 35
    WHILE     shift, and go to state 36
    DO        shift, and go to state 37
    CONTINUE  shift, and go to state 38
    READ      shift, and go to state 39
    WRITE     shift, and go to state 40
    RETURN    shift, and go to state 41
    IDENT     shift, and go to state 11

    statement  go to state 83
    var        go to state 44
    ident      go to state 46


State 56

   18 statement: READ var . vars

    COMMA  shift, and go to state 84

    $default  reduce using rule 69 (epsilon)

    vars     go to state 85
    epsilon  go to state 86


State 57

   19 statement: WRITE var . vars

    COMMA  shift, and go to state 84

    $default  reduce using rule 69 (epsilon)

    vars     go to state 87
    epsilon  go to state 86


State 58

   57 term: SUB . var
   67 negative1: SUB .

    IDENT  shift, and go to state 11

    $default  reduce using rule 67 (negative1)

    var    go to state 88
    ident  go to state 46


State 59

   21 statement: RETURN expression .

    $default  reduce using rule 21 (statement)


State 60

   47 expression: multiplicative_expr . expression1

    SUB  shift, and go to state 89
    ADD  shift, and go to state 90

    $default  reduce using rule 69 (epsilon)

    expression1  go to state 91
    epsilon      go to state 92


State 61

   51 multiplicative_expr: term . multiplicative_expr1

    MULT  shift, and go to state 93
    DIV   shift, and go to state 94
    MOD   shift, and go to state 95

    $default  reduce using rule 69 (epsilon)

    multiplicative_expr1  go to state 96
    epsilon               go to state 97


State 62

   56 term: negative1 . term1

    L_PAREN  shift, and go to state 98
    NUMBER   shift, and go to state 99

    term1  go to state 100


State 63

   68 negative1: epsilon .

    $default  reduce using rule 68 (negative1)


State 64

   58 term: ident . term3

    L_PAREN  shift, and go to state 101

    $default  reduce using rule 69 (epsilon)

    term3    go to state 102
    epsilon  go to state 103


State 65

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY .

    $default  reduce using rule 4 (function)


State 66

   12 statements: statement SEMICOLON . statements

    IF        shift, and go to state 35
    WHILE     shift, and go to state 36
    DO        shift, and go to state 37
    CONTINUE  shift, and go to state 38
    READ      shift, and go to state 39
    WRITE     shift, and go to state 40
    RETURN    shift, and go to state 41
    IDENT     shift, and go to state 11

    $default  reduce using rule 69 (epsilon)

    statements  go to state 104
    statement   go to state 43
    var         go to state 44
    epsilon     go to state 45
    ident       go to state 46


State 67

   14 statement: var ASSIGN . expression

    SUB    shift, and go to state 58
    IDENT  shift, and go to state 11

    $default  reduce using rule 69 (epsilon)

    expression           go to state 105
    multiplicative_expr  go to state 60
    term                 go to state 61
    negative1            go to state 62
    epsilon              go to state 63
    ident                go to state 64


State 68

   27 var: ident L_SQUARE_BRACKET . expression R_SQUARE_BRACKET

    SUB    shift, and go to state 58
    IDENT  shift, and go to state 11

    $default  reduce using rule 69 (epsilon)

    expression           go to state 106
    multiplicative_expr  go to state 60
    term                 go to state 61
    negative1            go to state 62
    epsilon              go to state 63
    ident                go to state 64


State 69

   10 array: ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF .

    $default  reduce using rule 10 (array)


State 70

   15 statement: IF boolexpr THEN . statement SEMICOLON statements else ENDIF

    IF        shift, and go to state 35
    WHILE     shift, and go to state 36
    DO        shift, and go to state 37
    CONTINUE  shift, and go to state 38
    READ      shift, and go to state 39
    WRITE     shift, and go to state 40
    RETURN    shift, and go to state 41
    IDENT     shift, and go to state 11

    statement  go to state 107
    var        go to state 44
    ident      go to state 46


State 71

   29 boolexpr1: OR . boolexpr

    NOT  shift, and go to state 48

    $default  reduce using rule 69 (epsilon)

    boolexpr           go to state 108
    relation_and_expr  go to state 50
    relation_expr      go to state 51
    not                go to state 52
    epsilon            go to state 53


State 72

   28 boolexpr: relation_and_expr boolexpr1 .

    $default  reduce using rule 28 (boolexpr)


State 73

   30 boolexpr1: epsilon .

    $default  reduce using rule 30 (boolexpr1)


State 74

   32 relation_and_expr1: AND . relation_and_expr

    NOT  shift, and go to state 48

    $default  reduce using rule 69 (epsilon)

    relation_and_expr  go to state 109
    relation_expr      go to state 51
    not                go to state 52
    epsilon            go to state 53


State 75

   31 relation_and_expr: relation_expr relation_and_expr1 .

    $default  reduce using rule 31 (relation_and_expr)


State 76

   33 relation_and_expr1: epsilon .

    $default  reduce using rule 33 (relation_and_expr1)


State 77

   36 relation_expr1: TRUE .

    $default  reduce using rule 36 (relation_expr1)


State 78

   37 relation_expr1: FALSE .

    $default  reduce using rule 37 (relation_expr1)


State 79

   38 relation_expr1: L_PAREN . boolexpr R_PAREN

    NOT  shift, and go to state 48

    $default  reduce using rule 69 (epsilon)

    boolexpr           go to state 110
    relation_and_expr  go to state 50
    relation_expr      go to state 51
    not                go to state 52
    epsilon            go to state 53


State 80

   34 relation_expr: not relation_expr1 .

    $default  reduce using rule 34 (relation_expr)


State 81

   35 relation_expr1: expression . comp expression

    EQ   shift, and go to state 111
    NEQ  shift, and go to state 112
    LT   shift, and go to state 113
    GT   shift, and go to state 114
    LTE  shift, and go to state 115
    GTE  shift, and go to state 116

    comp  go to state 117


State 82

   16 statement: WHILE boolexpr BEGINLOOP . statement SEMICOLON statements ENDLOOP

    IF        shift, and go to state 35
    WHILE     shift, and go to state 36
    DO        shift, and go to state 37
    CONTINUE  shift, and go to state 38
    READ      shift, and go to state 39
    WRITE     shift, and go to state 40
    RETURN    shift, and go to state 41
    IDENT     shift, and go to state 11

    statement  go to state 118
    var        go to state 44
    ident      go to state 46


State 83

   17 statement: DO BEGINLOOP statement . SEMICOLON statements ENDLOOP WHILE boolexpr

    SEMICOLON  shift, and go to state 119


State 84

   22 vars: COMMA . var vars

    IDENT  shift, and go to state 11

    var    go to state 120
    ident  go to state 46


State 85

   18 statement: READ var vars .

    $default  reduce using rule 18 (statement)


State 86

   23 vars: epsilon .

    $default  reduce using rule 23 (vars)


State 87

   19 statement: WRITE var vars .

    $default  reduce using rule 19 (statement)


State 88

   57 term: SUB var .

    $default  reduce using rule 57 (term)


State 89

   49 expression1: SUB . expression

    SUB    shift, and go to state 58
    IDENT  shift, and go to state 11

    $default  reduce using rule 69 (epsilon)

    expression           go to state 121
    multiplicative_expr  go to state 60
    term                 go to state 61
    negative1            go to state 62
    epsilon              go to state 63
    ident                go to state 64


State 90

   48 expression1: ADD . expression

    SUB    shift, and go to state 58
    IDENT  shift, and go to state 11

    $default  reduce using rule 69 (epsilon)

    expression           go to state 122
    multiplicative_expr  go to state 60
    term                 go to state 61
    negative1            go to state 62
    epsilon              go to state 63
    ident                go to state 64


State 91

   47 expression: multiplicative_expr expression1 .

    $default  reduce using rule 47 (expression)


State 92

   50 expression1: epsilon .

    $default  reduce using rule 50 (expression1)


State 93

   52 multiplicative_expr1: MULT . multiplicative_expr

    SUB    shift, and go to state 58
    IDENT  shift, and go to state 11

    $default  reduce using rule 69 (epsilon)

    multiplicative_expr  go to state 123
    term                 go to state 61
    negative1            go to state 62
    epsilon              go to state 63
    ident                go to state 64


State 94

   53 multiplicative_expr1: DIV . multiplicative_expr

    SUB    shift, and go to state 58
    IDENT  shift, and go to state 11

    $default  reduce using rule 69 (epsilon)

    multiplicative_expr  go to state 124
    term                 go to state 61
    negative1            go to state 62
    epsilon              go to state 63
    ident                go to state 64


State 95

   54 multiplicative_expr1: MOD . multiplicative_expr

    SUB    shift, and go to state 58
    IDENT  shift, and go to state 11

    $default  reduce using rule 69 (epsilon)

    multiplicative_expr  go to state 125
    term                 go to state 61
    negative1            go to state 62
    epsilon              go to state 63
    ident                go to state 64


State 96

   51 multiplicative_expr: term multiplicative_expr1 .

    $default  reduce using rule 51 (multiplicative_expr)


State 97

   55 multiplicative_expr1: epsilon .

    $default  reduce using rule 55 (multiplicative_expr1)


State 98

   62 term1: L_PAREN . expression R_PAREN

    SUB    shift, and go to state 58
    IDENT  shift, and go to state 11

    $default  reduce using rule 69 (epsilon)

    expression           go to state 126
    multiplicative_expr  go to state 60
    term                 go to state 61
    negative1            go to state 62
    epsilon              go to state 63
    ident                go to state 64


State 99

   61 term1: NUMBER .

    $default  reduce using rule 61 (term1)


State 100

   56 term: negative1 term1 .

    $default  reduce using rule 56 (term)


State 101

   59 term3: L_PAREN . term2 R_PAREN

    SUB    shift, and go to state 58
    IDENT  shift, and go to state 11

    $default  reduce using rule 69 (epsilon)

    expression           go to state 127
    multiplicative_expr  go to state 60
    term                 go to state 61
    term2                go to state 128
    negative1            go to state 62
    epsilon              go to state 129
    ident                go to state 64


State 102

   58 term: ident term3 .

    $default  reduce using rule 58 (term)


State 103

   60 term3: epsilon .

    $default  reduce using rule 60 (term3)


State 104

   12 statements: statement SEMICOLON statements .

    $default  reduce using rule 12 (statements)


State 105

   14 statement: var ASSIGN expression .

    $default  reduce using rule 14 (statement)


State 106

   27 var: ident L_SQUARE_BRACKET expression . R_SQUARE_BRACKET

    R_SQUARE_BRACKET  shift, and go to state 130


State 107

   15 statement: IF boolexpr THEN statement . SEMICOLON statements else ENDIF

    SEMICOLON  shift, and go to state 131


State 108

   29 boolexpr1: OR boolexpr .

    $default  reduce using rule 29 (boolexpr1)


State 109

   32 relation_and_expr1: AND relation_and_expr .

    $default  reduce using rule 32 (relation_and_expr1)


State 110

   38 relation_expr1: L_PAREN boolexpr . R_PAREN

    R_PAREN  shift, and go to state 132


State 111

   41 comp: EQ .

    $default  reduce using rule 41 (comp)


State 112

   42 comp: NEQ .

    $default  reduce using rule 42 (comp)


State 113

   43 comp: LT .

    $default  reduce using rule 43 (comp)


State 114

   44 comp: GT .

    $default  reduce using rule 44 (comp)


State 115

   45 comp: LTE .

    $default  reduce using rule 45 (comp)


State 116

   46 comp: GTE .

    $default  reduce using rule 46 (comp)


State 117

   35 relation_expr1: expression comp . expression

    SUB    shift, and go to state 58
    IDENT  shift, and go to state 11

    $default  reduce using rule 69 (epsilon)

    expression           go to state 133
    multiplicative_expr  go to state 60
    term                 go to state 61
    negative1            go to state 62
    epsilon              go to state 63
    ident                go to state 64


State 118

   16 statement: WHILE boolexpr BEGINLOOP statement . SEMICOLON statements ENDLOOP

    SEMICOLON  shift, and go to state 134


State 119

   17 statement: DO BEGINLOOP statement SEMICOLON . statements ENDLOOP WHILE boolexpr

    IF        shift, and go to state 35
    WHILE     shift, and go to state 36
    DO        shift, and go to state 37
    CONTINUE  shift, and go to state 38
    READ      shift, and go to state 39
    WRITE     shift, and go to state 40
    RETURN    shift, and go to state 41
    IDENT     shift, and go to state 11

    $default  reduce using rule 69 (epsilon)

    statements  go to state 135
    statement   go to state 43
    var         go to state 44
    epsilon     go to state 45
    ident       go to state 46


State 120

   22 vars: COMMA var . vars

    COMMA  shift, and go to state 84

    $default  reduce using rule 69 (epsilon)

    vars     go to state 136
    epsilon  go to state 86


State 121

   49 expression1: SUB expression .

    $default  reduce using rule 49 (expression1)


State 122

   48 expression1: ADD expression .

    $default  reduce using rule 48 (expression1)


State 123

   52 multiplicative_expr1: MULT multiplicative_expr .

    $default  reduce using rule 52 (multiplicative_expr1)


State 124

   53 multiplicative_expr1: DIV multiplicative_expr .

    $default  reduce using rule 53 (multiplicative_expr1)


State 125

   54 multiplicative_expr1: MOD multiplicative_expr .

    $default  reduce using rule 54 (multiplicative_expr1)


State 126

   62 term1: L_PAREN expression . R_PAREN

    R_PAREN  shift, and go to state 137


State 127

   63 term2: expression . expressions

    COMMA  shift, and go to state 138

    $default  reduce using rule 69 (epsilon)

    expressions  go to state 139
    epsilon      go to state 140


State 128

   59 term3: L_PAREN term2 . R_PAREN

    R_PAREN  shift, and go to state 141


State 129

   64 term2: epsilon .
   68 negative1: epsilon .

    R_PAREN   reduce using rule 64 (term2)
    $default  reduce using rule 68 (negative1)


State 130

   27 var: ident L_SQUARE_BRACKET expression R_SQUARE_BRACKET .

    $default  reduce using rule 27 (var)


State 131

   15 statement: IF boolexpr THEN statement SEMICOLON . statements else ENDIF

    IF        shift, and go to state 35
    WHILE     shift, and go to state 36
    DO        shift, and go to state 37
    CONTINUE  shift, and go to state 38
    READ      shift, and go to state 39
    WRITE     shift, and go to state 40
    RETURN    shift, and go to state 41
    IDENT     shift, and go to state 11

    $default  reduce using rule 69 (epsilon)

    statements  go to state 142
    statement   go to state 43
    var         go to state 44
    epsilon     go to state 45
    ident       go to state 46


State 132

   38 relation_expr1: L_PAREN boolexpr R_PAREN .

    $default  reduce using rule 38 (relation_expr1)


State 133

   35 relation_expr1: expression comp expression .

    $default  reduce using rule 35 (relation_expr1)


State 134

   16 statement: WHILE boolexpr BEGINLOOP statement SEMICOLON . statements ENDLOOP

    IF        shift, and go to state 35
    WHILE     shift, and go to state 36
    DO        shift, and go to state 37
    CONTINUE  shift, and go to state 38
    READ      shift, and go to state 39
    WRITE     shift, and go to state 40
    RETURN    shift, and go to state 41
    IDENT     shift, and go to state 11

    $default  reduce using rule 69 (epsilon)

    statements  go to state 143
    statement   go to state 43
    var         go to state 44
    epsilon     go to state 45
    ident       go to state 46


State 135

   17 statement: DO BEGINLOOP statement SEMICOLON statements . ENDLOOP WHILE boolexpr

    ENDLOOP  shift, and go to state 144


State 136

   22 vars: COMMA var vars .

    $default  reduce using rule 22 (vars)


State 137

   62 term1: L_PAREN expression R_PAREN .

    $default  reduce using rule 62 (term1)


State 138

   65 expressions: COMMA . expression expressions

    SUB    shift, and go to state 58
    IDENT  shift, and go to state 11

    $default  reduce using rule 69 (epsilon)

    expression           go to state 145
    multiplicative_expr  go to state 60
    term                 go to state 61
    negative1            go to state 62
    epsilon              go to state 63
    ident                go to state 64


State 139

   63 term2: expression expressions .

    $default  reduce using rule 63 (term2)


State 140

   66 expressions: epsilon .

    $default  reduce using rule 66 (expressions)


State 141

   59 term3: L_PAREN term2 R_PAREN .

    $default  reduce using rule 59 (term3)


State 142

   15 statement: IF boolexpr THEN statement SEMICOLON statements . else ENDIF

    ELSE  shift, and go to state 146

    $default  reduce using rule 69 (epsilon)

    else     go to state 147
    epsilon  go to state 148


State 143

   16 statement: WHILE boolexpr BEGINLOOP statement SEMICOLON statements . ENDLOOP

    ENDLOOP  shift, and go to state 149


State 144

   17 statement: DO BEGINLOOP statement SEMICOLON statements ENDLOOP . WHILE boolexpr

    WHILE  shift, and go to state 150


State 145

   65 expressions: COMMA expression . expressions

    COMMA  shift, and go to state 138

    $default  reduce using rule 69 (epsilon)

    expressions  go to state 151
    epsilon      go to state 140


State 146

   24 else: ELSE . statement SEMICOLON statements

    IF        shift, and go to state 35
    WHILE     shift, and go to state 36
    DO        shift, and go to state 37
    CONTINUE  shift, and go to state 38
    READ      shift, and go to state 39
    WRITE     shift, and go to state 40
    RETURN    shift, and go to state 41
    IDENT     shift, and go to state 11

    statement  go to state 152
    var        go to state 44
    ident      go to state 46


State 147

   15 statement: IF boolexpr THEN statement SEMICOLON statements else . ENDIF

    ENDIF  shift, and go to state 153


State 148

   25 else: epsilon .

    $default  reduce using rule 25 (else)


State 149

   16 statement: WHILE boolexpr BEGINLOOP statement SEMICOLON statements ENDLOOP .

    $default  reduce using rule 16 (statement)


State 150

   17 statement: DO BEGINLOOP statement SEMICOLON statements ENDLOOP WHILE . boolexpr

    NOT  shift, and go to state 48

    $default  reduce using rule 69 (epsilon)

    boolexpr           go to state 154
    relation_and_expr  go to state 50
    relation_expr      go to state 51
    not                go to state 52
    epsilon            go to state 53


State 151

   65 expressions: COMMA expression expressions .

    $default  reduce using rule 65 (expressions)


State 152

   24 else: ELSE statement . SEMICOLON statements

    SEMICOLON  shift, and go to state 155


State 153

   15 statement: IF boolexpr THEN statement SEMICOLON statements else ENDIF .

    $default  reduce using rule 15 (statement)


State 154

   17 statement: DO BEGINLOOP statement SEMICOLON statements ENDLOOP WHILE boolexpr .

    $default  reduce using rule 17 (statement)


State 155

   24 else: ELSE statement SEMICOLON . statements

    IF        shift, and go to state 35
    WHILE     shift, and go to state 36
    DO        shift, and go to state 37
    CONTINUE  shift, and go to state 38
    READ      shift, and go to state 39
    WRITE     shift, and go to state 40
    RETURN    shift, and go to state 41
    IDENT     shift, and go to state 11

    $default  reduce using rule 69 (epsilon)

    statements  go to state 156
    statement   go to state 43
    var         go to state 44
    epsilon     go to state 45
    ident       go to state 46


State 156

   24 else: ELSE statement SEMICOLON statements .

    $default  reduce using rule 24 (else)
